import org.springframework.beans.BeansException;
import org.springframework.beans.factory.config.BeanPostProcessor;
import org.springframework.core.convert.converter.Converter;
import org.springframework.stereotype.Component;

import java.util.ArrayList;
import java.util.List;

@Component
public class ConverterListerBeanPostProcessor implements BeanPostProcessor {

    private List<Converter<?, ?>> converters = new ArrayList<>();

    @Override
    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {
        if (bean instanceof Converter) {
            converters.add((Converter<?, ?>) bean);
        }
        return bean;
    }

    public List<Converter<?, ?>> getConverters() {
        return converters;
    }
}





import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

@RestController
public class ConverterController {

    @Autowired
    private ConverterListerBeanPostProcessor converterListerBeanPostProcessor;

    @GetMapping("/converters")
    public List<Converter<?, ?>> listConverters() {
        return converterListerBeanPostProcessor.getConverters();
    }
}